apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: customer-apps
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - git:
      repoURL: "https://github.com/ag-dummy/mclass.git"
      revision: HEAD
      directories:
      - path: "customer-apps/*"
  template:
    metadata:
      name: '{{.path.basename}}'
      annotations:
        notifications.argoproj.io/subscribe.on-created.dynatrace: ""
        notifications.argoproj.io/subscribe.on-deployed.dynatrace: ""
        notifications.argoproj.io/subscribe.on-health-degraded.dynatrace: ""
        notifications.argoproj.io/subscribe.on-sync-failed.dynatrace: ""
        notifications.argoproj.io/subscribe.on-sync-running.dynatrace: ""
        notifications.argoproj.io/subscribe.on-sync-succeeded.dynatrace: ""
    spec:
      project: "default"
      source:
        repoURL: "https://github.com/ag-dummy/mclass.git"
        targetRevision: HEAD
        path: '{{.path.path}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{.path.basename}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: true
        syncOptions:
          - Validate=true
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - PruneLast=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
# OLD BELOW
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: ApplicationSet
# metadata:
#   name: customer-apps
#   namespace: argocd
# spec:
#   generators:
#   - scmProvider:
#       filters:
#       - repositoryMatch: -cd$
#         pathsExist: [argoapp]
#       cloneProtocol: https
#       github:
#         allBranches: false
#         organization: "ag-dummy"
#         # Use authenticated request to avoid hitting API limit
#         # Which permissions does the token need?
#         # Reference to a Secret containing an access token. (optional)
#         # Needs "read" metadata permissions
#         tokenRef:
#           secretName: github-token
#           key: token
#   template:
#     metadata:
#       name: "{{ repository }}"
#       annotations:
#         notifications.argoproj.io/subscribe.on-created.dynatrace: ""
#         notifications.argoproj.io/subscribe.on-deployed.dynatrace: ""
#         notifications.argoproj.io/subscribe.on-health-degraded.dynatrace: ""
#         notifications.argoproj.io/subscribe.on-sync-failed.dynatrace: ""
#         notifications.argoproj.io/subscribe.on-sync-running.dynatrace: ""
#         notifications.argoproj.io/subscribe.on-sync-succeeded.dynatrace: ""       
#     spec:
#       project: default
#       source:
#         repoURL: "{{ repository }}"
#         targetRevision: HEAD
#         path: argoapp
#       destination:
#         server: 'https://kubernetes.default.svc'
#         namespace: '{{ repository }}'
#       syncPolicy:
#         automated:
#           prune: true
#           selfHeal: true
#           allowEmpty: true
#         syncOptions:
#           - Validate=true
#           - CreateNamespace=true
#           - PrunePropagationPolicy=foreground
#           - PruneLast=true
#         retry:
#           limit: 5
#           backoff:
#             duration: 5s
#             factor: 2
#             maxDuration: 3m
